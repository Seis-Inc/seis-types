import { ListOptions } from "../common/ListOptions";
import { Page } from "../common/Page";
export enum CasapDisputeEventType {
	DISPUTE_EVENT_TYPE_UNKNOWN = "DISPUTE_EVENT_TYPE_UNKNOWN",
	DISPUTE_EVENT_TYPE_CREATE = "DISPUTE_EVENT_TYPE_CREATE",
	DISPUTE_EVENT_TYPE_ASSIGN_AGENT = "DISPUTE_EVENT_TYPE_ASSIGN_AGENT",
	DISPUTE_EVENT_TYPE_ADD_COMMENT = "DISPUTE_EVENT_TYPE_ADD_COMMENT",
	DISPUTE_EVENT_TYPE_UNASSIGN_AGENT = "DISPUTE_EVENT_TYPE_UNASSIGN_AGENT",
	DISPUTE_EVENT_TYPE_UPLOAD_PAN_TOKEN = "DISPUTE_EVENT_TYPE_UPLOAD_PAN_TOKEN",
	DISPUTE_EVENT_TYPE_UPDATE_PRIORITY = "DISPUTE_EVENT_TYPE_UPDATE_PRIORITY",
	DISPUTE_EVENT_TYPE_REOPEN = "DISPUTE_EVENT_TYPE_REOPEN",
	DISPUTE_EVENT_TYPE_REPLACE_CARD = "DISPUTE_EVENT_TYPE_REPLACE_CARD",
	DISPUTE_EVENT_TYPE_UPLOAD_WSUD = "DISPUTE_EVENT_TYPE_UPLOAD_WSUD",
	DISPUTE_EVENT_TYPE_RECORD_ODFI_RESPONSE = "DISPUTE_EVENT_TYPE_RECORD_ODFI_RESPONSE",
	DISPUTE_EVENT_TYPE_UPDATE_DISPUTE_REASON = "DISPUTE_EVENT_TYPE_UPDATE_DISPUTE_REASON",
	DISPUTE_EVENT_TYPE_UPLOAD_FILE = "DISPUTE_EVENT_TYPE_UPLOAD_FILE",
	DISPUTE_EVENT_TYPE_COMMUNICATION = "DISPUTE_EVENT_TYPE_COMMUNICATION",
  }

  export enum CasapDisputeTransactionEventType {
	TRANSACTION_EVENT_TYPE_UNKNOWN = "TRANSACTION_EVENT_TYPE_UNKNOWN",
	TRANSACTION_EVENT_TYPE_ISSUE_PROVISIONAL_CREDIT = "TRANSACTION_EVENT_TYPE_ISSUE_PROVISIONAL_CREDIT",
	TRANSACTION_EVENT_TYPE_START_CHARGBACK = "TRANSACTION_EVENT_TYPE_START_CHARGBACK",
	TRANSACTION_EVENT_TYPE_RECORD_REPRESENTMENT = "TRANSACTION_EVENT_TYPE_RECORD_REPRESENTMENT",
	TRANSACTION_EVENT_TYPE_CHALLENGE_REPRESENTMENT = "TRANSACTION_EVENT_TYPE_CHALLENGE_REPRESENTMENT",
	TRANSACTION_EVENT_TYPE_FILE_PRE_ARB = "TRANSACTION_EVENT_TYPE_FILE_PRE_ARB",
	TRANSACTION_EVENT_TYPE_RECORD_PRE_ARB_RESPONSE = "TRANSACTION_EVENT_TYPE_RECORD_PRE_ARB_RESPONSE",
	TRANSACTION_EVENT_TYPE_CHALLENGE_PRE_ARB_RESPONSE = "TRANSACTION_EVENT_TYPE_CHALLENGE_PRE_ARB_RESPONSE",
	TRANSACTION_EVENT_TYPE_FILE_ARB = "TRANSACTION_EVENT_TYPE_FILE_ARB",
	TRANSACTION_EVENT_TYPE_RECORD_ARB_RESPONSE = "TRANSACTION_EVENT_TYPE_RECORD_ARB_RESPONSE",
	TRANSACTION_EVENT_TYPE_CLOSE_CHARGEBACK = "TRANSACTION_EVENT_TYPE_CLOSE_CHARGEBACK",
	TRANSACTION_EVENT_TYPE_RECORD_FINAL_DECISION = "TRANSACTION_EVENT_TYPE_RECORD_FINAL_DECISION",
	TRANSACTION_EVENT_TYPE_REVERSE_PROVISIONAL_CREDIT = "TRANSACTION_EVENT_TYPE_REVERSE_PROVISIONAL_CREDIT",
	TRANSACTION_EVENT_TYPE_SUBMIT_PC_FORM = "TRANSACTION_EVENT_TYPE_SUBMIT_PC_FORM",
  }
export enum DisputeType {
    DISPUTE_TYPE_CREDIT = 'DISPUTE_TYPE_CREDIT',
    DISPUTE_TYPE_DEBIT = 'DISPUTE_TYPE_DEBIT'
}

export type DisputeEvent = {
    id: string;
    disputeId: string;
    disputedTransactionId?: string;
    disputeType: DisputeType;
    eventDate: number;
    eventType: CasapDisputeEventType & CasapDisputeTransactionEventType;
    eventData?: {[key: string]: any};
    agentEmail: string;
    createdAt: string;
};

export type CreateDisputeEventInput = Omit<DisputeEvent, 'id' | 'createdAt'>;

export type UpdateDisputeEventInput = {
    id: string;
    processedAt: string;
};

export type FilterDisputeEventsInput = {
    isNotProcessed?: boolean;
} & ListOptions;

export type DisputeEventPage = Page<DisputeEvent>;